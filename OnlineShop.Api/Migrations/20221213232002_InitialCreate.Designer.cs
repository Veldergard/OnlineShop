// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.Api.Data;

#nullable disable

namespace OnlineShop.Api.Migrations
{
    [DbContext(typeof(OnlineShopDbContext))]
    [Migration("20221213232002_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineShop.Api.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("OnlineShop.Api.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("OnlineShop.Api.Entities.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 600,
                            CategoryId = 1,
                            Description = "Шампиньоны, грибной соус, красный лук, моцарелла, смесь сыров чеддер и пармезан, фирменный соус альфредо, чеснок",
                            ImageURL = "/Images/Pizza/Mushroom.png",
                            Name = "Грибная",
                            Price = 629m
                        },
                        new
                        {
                            Id = 2,
                            Amount = 490,
                            CategoryId = 1,
                            Description = "Моцарелла, сыры чеддер и пармезан, фирменный соус альфредо",
                            ImageURL = "/Images/Pizza/Cheese.png",
                            Name = "Сырная",
                            Price = 479m
                        },
                        new
                        {
                            Id = 3,
                            Amount = 500,
                            CategoryId = 1,
                            Description = "Ветчина, моцарелла, фирменный соус альфредо",
                            ImageURL = "/Images/Pizza/HamAndCheese.png",
                            Name = "Ветчина и сыр",
                            Price = 479m
                        },
                        new
                        {
                            Id = 4,
                            Amount = 580,
                            CategoryId = 1,
                            Description = "Пикантная пепперони, увеличенная порция моцареллы, фирменный томатный соус",
                            ImageURL = "/Images/Pizza/Pepperoni.png",
                            Name = "Пепперони",
                            Price = 629m
                        },
                        new
                        {
                            Id = 5,
                            Amount = 640,
                            CategoryId = 1,
                            Description = "Ветчина, ананасы, моцарелла, фирменный томатный соус",
                            ImageURL = "/Images/Pizza/Hawaiian.png",
                            Name = "Гавайская",
                            Price = 629m
                        },
                        new
                        {
                            Id = 6,
                            Amount = 103,
                            CategoryId = 2,
                            Description = "Рубленый бифштекс из натуральной цельной говядины на карамелизованной булочке, заправленной горчицей, кетчупом, луком и кусочком маринованного огурчика",
                            ImageURL = "/Images/Burger/Hamburger.png",
                            Name = "Гамбургер",
                            Price = 55m
                        },
                        new
                        {
                            Id = 7,
                            Amount = 117,
                            CategoryId = 2,
                            Description = "Рубленый бифштекс из натуральной цельной говядины с кусочками сыра Чеддер на карамелизованной булочке, заправленной горчицей, кетчупом, луком и кусочком маринованного огурчика",
                            ImageURL = "/Images/Burger/Cheeseburger.png",
                            Name = "Чизбургер",
                            Price = 59m
                        },
                        new
                        {
                            Id = 8,
                            Amount = 129,
                            CategoryId = 2,
                            Description = "Обжаренная куриная котлета из сочного куриного мяса, панированная в сухарях, которая подается на карамелизованной булочке, заправленной свежим салатом и специальным соусом",
                            ImageURL = "/Images/Burger/Chickenburger.png",
                            Name = "Чикенбургер",
                            Price = 59m
                        },
                        new
                        {
                            Id = 9,
                            Amount = 250,
                            CategoryId = 3,
                            Description = "Прохладительный газированный напиток 0,25 л",
                            ImageURL = "/Images/Drink/Cola.png",
                            Name = "Добрый Кола",
                            Price = 79m
                        });
                });

            modelBuilder.Entity("OnlineShop.Api.Entities.DishCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DishCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pizza"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Burger"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drink"
                        });
                });

            modelBuilder.Entity("OnlineShop.Api.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserName = "Alexander"
                        },
                        new
                        {
                            Id = 2,
                            UserName = "Anvar"
                        },
                        new
                        {
                            Id = 3,
                            UserName = "Arthur"
                        },
                        new
                        {
                            Id = 4,
                            UserName = "Michael"
                        },
                        new
                        {
                            Id = 5,
                            UserName = "Anya"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
